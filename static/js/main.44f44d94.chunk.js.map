{"version":3,"sources":["components/Header.js","Firebase.js","components/WrongLetters.js","components/Word.js","components/GamePage.js","components/Login.js","App.js","index.js"],"names":["Header","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","WrongLetters","Word","selectedWord","correctLetters","GamePage","useState","nickname","onClick","e","game","message","type","exitGame","Login","history","useHistory","users","setUsers","ref","database","Form","onSubmit","preventDefault","orderByChild","equalTo","once","snapshot","exists","localStorage","setItem","push","set","FormGroup","Label","Input","name","id","placeholder","onChange","target","value","Button","variant","to","component","App","path","exact","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8KAWeA,EATA,WACb,OACE,qCACE,2CACA,8E,+ECQNC,IAASC,cAZY,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,0DACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAMFT,QAAf,ECNeU,EARM,WACnB,OACE,mCACE,qDCWSC,EAdF,SAAC,GAAqC,EAAnCC,aAAmC,EAArBC,eAC5B,OACE,yBCyBWC,EAxBE,WACf,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,UAOA,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,wBACEC,QAAS,YAZE,SAACC,GAChB,IAAMC,EAAO,CAAEH,SAAU,IACzBG,EAAKH,SAAWA,EAChBG,EAAKC,QAAL,UAAkBJ,EAAlB,mBACAG,EAAKE,KAAO,OASNC,IAFJ,2BCuCSC,MAlDf,WACE,IAAMC,EAAUC,cAChB,EAA0BV,mBAAS,CAAEC,SAAU,KAA/C,mBAAOU,EAAP,KAAcC,EAAd,KACMC,EAAM5B,EAAS6B,WAAWD,IAAI,UAuBpC,OACE,gCACE,cAAC,EAAD,IACA,eAACE,EAAA,EAAD,CAAMC,SAzBI,SAACb,GACbA,EAAEc,iBACFJ,EACGK,aAAa,YACbC,QAAQR,EAAMV,UAEdmB,KAAK,SAAS,SAACC,GACVA,EAASC,UACXC,aAAaC,QAAQ,WAAYb,EAAMV,UACvCQ,EAAQgB,KAAK,eAEGxC,EAAS6B,WAAWD,IAAI,UAAUY,OAC1CC,IAAIf,GACZY,aAAaC,QAAQ,WAAYb,EAAMV,UACvCQ,EAAQgB,KAAK,kBAWjB,UACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,uBACA,cAACC,EAAA,EAAD,CACEvB,KAAK,OACLwB,KAAK,WACLC,GAAG,WACHC,YAAY,sBACZC,SAfO,SAAC9B,GAChBA,EAAEc,iBACFL,EAAS,2BAAKZ,YAAN,kBAAiBG,EAAE+B,OAAOJ,KAAO3B,EAAE+B,OAAOC,eAgB9C,cAACC,EAAA,EAAD,CAAQ9B,KAAK,SAAS+B,QAAQ,UAA9B,SACE,eAAC,IAAD,CAAMC,GAAG,YAAYC,UAAWxC,EAAhC,UACG,IADH,SAES,gBCxBJ,SAASyC,IACtB,MAA4CxC,mBAAS,IAArD,mBACA,GADA,UACwCA,mBAAS,KAAjD,6BAEA,OACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,KAAM,IAAKF,UAAW/B,EAAOkC,OAAK,IACzC,cAAC,IAAD,CAAOD,KAAK,YAAYF,UAAWxC,WC9B7C,IAAM4C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACP,EAAD,MAEFG,K","file":"static/js/main.44f44d94.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1>Word Game</h1>\r\n      <h4>Find the hidden words with your friends!</h4>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBI-OnW3p93qMOq1Osr_ayBWyNRVRf0VqI\",\r\n  authDomain: \"react-hangman-da26f.firebaseapp.com\",\r\n  databaseURL: \"https://react-hangman-da26f-default-rtdb.firebaseio.com\",\r\n  projectId: \"react-hangman-da26f\",\r\n  storageBucket: \"react-hangman-da26f.appspot.com\",\r\n  messagingSenderId: \"1092691578315\",\r\n  appId: \"1:1092691578315:web:60131d86fe6f8793a8fa4e\",\r\n  measurementId: \"G-LS9NCC2CZQ\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\n\r\nconst WrongLetters = () => {\r\n  return (\r\n    <>\r\n      <p>Test WrongLetters</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WrongLetters;\r\n","import React from \"react\";\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n  return (\r\n    <div>\r\n      {/* {selectedWord.split(\"\").map((letter, index) => {\r\n        return (\r\n          <span className=\"letter\" key={index}>\r\n            {correctLetters.includes(letter) ? letter : \"\"}\r\n          </span>\r\n        );\r\n      })} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport WrongLetters from \"./WrongLetters\";\r\nimport Word from \"./Word\";\r\n\r\nconst GamePage = () => {\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const exitGame = (e) => {\r\n    const game = { nickname: \"\" };\r\n    game.nickname = nickname;\r\n    game.message = `${nickname} leave the game`;\r\n    game.type = \"exit\";\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <WrongLetters />\r\n      <Word />\r\n      <button\r\n        onClick={() => {\r\n          exitGame();\r\n        }}\r\n      >\r\n        Exit Game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, FormGroup, Label, Input } from \"reactstrap\";\r\nimport firebase from \"../Firebase\";\r\nimport Header from \"./Header\";\r\nimport GamePage from \"./GamePage\";\r\nfunction Login() {\r\n  const history = useHistory();\r\n  const [users, setUsers] = useState({ nickname: \"\" });\r\n  const ref = firebase.database().ref(\"users/\");\r\n  const Login = (e) => {\r\n    e.preventDefault();\r\n    ref\r\n      .orderByChild(\"nickname\")\r\n      .equalTo(users.nickname)\r\n      //once ile değerin hemen döndürülmesini sağlarız veri almak için\r\n      .once(\"value\", (snapshot) => {\r\n        if (snapshot.exists()) {\r\n          localStorage.setItem(\"nickname\", users.nickname);\r\n          history.push(\"/gamepage\");\r\n        } else {\r\n          const newUser = firebase.database().ref(\"users/\").push();\r\n          newUser.set(users);\r\n          localStorage.setItem(\"nickname\", users.nickname);\r\n          history.push(\"/gamepage\");\r\n        }\r\n      });\r\n  };\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setUsers({ ...useState, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Form onSubmit={Login}>\r\n        <FormGroup>\r\n          <Label>Nickname</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"nickname\"\r\n            id=\"nickname\"\r\n            placeholder=\"Enter Your Nickname\"\r\n            onChange={onChange}\r\n          />\r\n        </FormGroup>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          <Link to=\"/gamepage\" component={GamePage}>\r\n            {\" \"}\r\n            Button{\" \"}\r\n          </Link>\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import \"./styles.css\";\nimport { useState } from \"react\";\n// import words from \"./service/words\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport GamePage from \"./components/GamePage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nconst words = [\n  \"monitor\",\n  \"apple\",\n  \"phone\",\n  \"keyboard\",\n  \"pepper\",\n  \"coffee\",\n  \"glass\",\n  \"spirit\"\n];\n\n// let selectedWord = words[Math.floor(Math.random() * words.length)];\n\nexport default function App() {\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path={\"/\"} component={Login} exact />\n          <Route path=\"/gamepage\" component={GamePage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}